/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;




import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.City;
import model.Community;
import model.House;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.Visits;

/**
 *
 * @author krupali
 */

public class registerPerson extends javax.swing.JPanel {

    Person person1 =new Person();
    PersonDirectory persondirectory=new PersonDirectory();
    PatientDirectory patientdirectory= new PatientDirectory();
    ArrayList <Person> personHistory1=new ArrayList<>();
    ArrayList<Patient> patientHistory1=new ArrayList<>();
    
    
    /**
     * Creates new form registerPerson
     */
    public registerPerson(Person person1,PersonDirectory persondirectory,PatientDirectory patientdirectory) {
        initComponents();
        

        this.person1=person1;
        this.persondirectory=persondirectory;
        this.patientdirectory=patientdirectory;
//        
//        JTextFieldDateEditor editor = (JTextFieldDateEditor)jDateDob.getDateEditor();
//        editor.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCity = new javax.swing.JLabel();
        lblMobNo = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblStreet = new javax.swing.JLabel();
        lblHouseNo = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtMobNo = new javax.swing.JTextField();
        txtHouseNo = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblMobNo1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jComboCommunity = new javax.swing.JComboBox<>();
        jComboCity = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCity.setBackground(new java.awt.Color(255, 204, 204));
        lblCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCity.setForeground(new java.awt.Color(102, 102, 102));
        lblCity.setText("City:");

        lblMobNo.setBackground(new java.awt.Color(255, 204, 204));
        lblMobNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMobNo.setForeground(new java.awt.Color(102, 102, 102));
        lblMobNo.setText("Mobile Number:");

        lblCommunity.setBackground(new java.awt.Color(255, 204, 204));
        lblCommunity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(102, 102, 102));
        lblCommunity.setText("Community:");

        lblStreet.setBackground(new java.awt.Color(255, 204, 204));
        lblStreet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblStreet.setForeground(new java.awt.Color(102, 102, 102));
        lblStreet.setText("Street:");

        lblHouseNo.setBackground(new java.awt.Color(255, 204, 204));
        lblHouseNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHouseNo.setForeground(new java.awt.Color(102, 102, 102));
        lblHouseNo.setText("House Number:");

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 51));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Register Person");
        lblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblFirstName.setBackground(new java.awt.Color(255, 204, 204));
        lblFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(102, 102, 102));
        lblFirstName.setText("First Name:");

        lblLastName.setBackground(new java.awt.Color(255, 204, 204));
        lblLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(102, 102, 102));
        lblLastName.setText("Last Name:");

        txtFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFirstNameKeyPressed(evt);
            }
        });

        txtLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLastNameKeyPressed(evt);
            }
        });

        txtMobNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtHouseNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtHouseNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHouseNoKeyPressed(evt);
            }
        });

        txtStreet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtStreet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStreetKeyPressed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.gray));
        btnSave.setHideActionText(true);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblMobNo1.setBackground(new java.awt.Color(153, 153, 153));
        lblMobNo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMobNo1.setForeground(new java.awt.Color(102, 102, 102));
        lblMobNo1.setText("Email I'd:");

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblAge.setBackground(new java.awt.Color(255, 204, 204));
        lblAge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAge.setForeground(new java.awt.Color(102, 102, 102));
        lblAge.setText("Age:");

        txtAge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
        });

        jComboCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bridges Community", "Friends Community", "Christian Community", "Jewish Community" }));

        jComboCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "NY", "Chicago" }));
        jComboCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHouseNo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMobNo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCommunity)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLastName)
                                    .addComponent(lblFirstName)))
                            .addComponent(lblMobNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStreet)
                            .addComponent(lblAge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 425, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                .addComponent(txtLastName)
                                .addComponent(txtMobNo)
                                .addComponent(txtHouseNo)
                                .addComponent(txtEmail)
                                .addComponent(txtAge)
                                .addComponent(txtStreet))
                            .addComponent(jComboCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(153, 153, 153))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(385, 385, 385))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAge, lblCity, lblCommunity, lblFirstName, lblHouseNo, lblLastName, lblMobNo, lblMobNo1, lblStreet});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobNo)
                    .addComponent(txtMobNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobNo1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseNo)
                    .addComponent(txtHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStreet)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCommunity)
                        .addGap(18, 18, 18)
                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboCity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAge, lblCity, lblCommunity, lblFirstName, lblHouseNo, lblLastName, lblMobNo, lblMobNo1, lblStreet});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboCity, jComboCommunity, txtStreet});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try{
            Person person = new Person();
            House house = new House();
            Community community= new Community();
            City city = new City();
            
            
            person.setFirstName(txtFirstName.getText());
            if( (txtFirstName.getText().isEmpty() || txtFirstName.getText() == null)){
                JOptionPane.showMessageDialog(txtFirstName, "Error: First name is null or empty");
                return;
            }
            
            
            person.setLastName(txtLastName.getText());
            if( (txtLastName.getText().isEmpty() || txtLastName.getText() == null)){
                JOptionPane.showMessageDialog(txtLastName, "Error: Last name is null or empty");
                return;
            }
//            person.setDOB(jDateDob.getDate());
//            SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
//            String currentDate = sdf.format(new Date());
//            String selectedDate = sdf.format(jDateDob.getDate());
//            DateFormat dateFormat = new SimpleDateFormat("MM-dd-yyyy");
//
//            try {
//                if(!(dateFormat.parse(selectedDate).before(dateFormat.parse(currentDate)))){
//                    JOptionPane.showMessageDialog(this, "Error: DOB has to be before current date.");
//                    return;
//                }
//                else if( selectedDate.isEmpty()  || selectedDate == null){
//                    JOptionPane.showMessageDialog(this, "Error: DOB is null or empty");
//                    return;                
//            }
//            } 
//            catch (ParseException ex) {
//                Logger.getLogger(registerPerson.class.getName()).log(Level.SEVERE, null, ex);
//            }
            person.setAge(Integer.parseInt(txtAge.getText()));

            if(txtAge.getText().isEmpty() || txtAge.getText()==null || txtAge.getText().matches("\\d")){
                JOptionPane.showMessageDialog(txtAge, "Error: Age is null or empty");               
                return;                
            }            
            
            
            person.setContactNo(txtMobNo.getText());
        // phone number validation for handling XXX-XXX-XXXX format
            if(txtMobNo.getText().isEmpty() || txtMobNo.getText() == null || !txtMobNo.getText().matches("^\\d{3}-\\d{3}-\\d{4}$")){
                JOptionPane.showMessageDialog(this,"Error: Phone Number must be in the form XXX-XXX-XXXX and cannot be null or empty");
                return;
            }            
        
            person.setEmail(txtEmail.getText());
            if(!txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$") || txtEmail.getText().isEmpty() || txtEmail.getText() == null){
                JOptionPane.showMessageDialog(this, "Error: Invalid Email address.");
                return;
            }
            
            house.setHouseNo(Integer.parseInt(txtHouseNo.getText()));
            if(txtHouseNo.getText().isEmpty() || txtHouseNo.getText() == null ){
                JOptionPane.showMessageDialog(this,"Error: House number should contain numeric value and cannot be null or empty");
                return;
            }            
            
            house.setStreet(txtStreet.getText());
            if(txtStreet.getText().isEmpty() || txtStreet.getText() == null){
                JOptionPane.showMessageDialog(this,"Error: Street cannot be null or empty");
                return;
            }            
            

            
//            community.setCommunityName(txtCommunity.getText()); 
//            if(txtCommunity.getText().isEmpty() || txtCommunity.getText() == null){
//                JOptionPane.showMessageDialog(this,"Error: Community name cannot be null or empty");
//                return;
//            } 
//            
//            city.setCityName(txtCity.getText());
//            if(txtCity.getText().isEmpty() || txtCity.getText() == null){
//                JOptionPane.showMessageDialog(this,"Error: City cannot be null or empty");
//                return;
//            } 

            community.setCommunityName(jComboCommunity.getSelectedItem().toString());
            city.setCityName(jComboCity.getSelectedItem().toString());
                
            community.setCity(city);
            house.setCommunity(community);
            
            person.setHouse(house);
            persondirectory.setPersonList(person);
            JOptionPane.showMessageDialog(this,"Patient details added.");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtFirstNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstNameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtFirstName.setEditable(true);  
        }
        else{
            txtFirstName.setEditable(false);
            JOptionPane.showMessageDialog(txtFirstName, "Invalid entry. Please enter letters only.");
        }
        
    }//GEN-LAST:event_txtFirstNameKeyPressed

    private void txtLastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtLastName.setEditable(true);  
        }
        else{
            txtLastName.setEditable(false);
            JOptionPane.showMessageDialog(txtFirstName, "Invalid entry. Please enter letters only.");
        }
    }//GEN-LAST:event_txtLastNameKeyPressed

    private void jComboCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboCityActionPerformed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtAge.setEditable(true);  
        }
        else{
            txtAge.setEditable(false);
            JOptionPane.showMessageDialog(txtAge, "Invalid Age");
        }        
    }//GEN-LAST:event_txtAgeKeyPressed

    private void txtHouseNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseNoKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtHouseNo.setEditable(true);  
        }
        else{
            txtHouseNo.setEditable(false);
            JOptionPane.showMessageDialog(txtHouseNo, "Invalid House No.");
        }
    }//GEN-LAST:event_txtHouseNoKeyPressed

    private void txtStreetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStreetKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtStreet.setEditable(true);  
        }
        else{
            txtStreet.setEditable(false);
            JOptionPane.showMessageDialog(txtStreet, "Invalid Street Number");
        }
    }//GEN-LAST:event_txtStreetKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> jComboCity;
    private javax.swing.JComboBox<String> jComboCommunity;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHouseNo;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMobNo;
    private javax.swing.JLabel lblMobNo1;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHouseNo;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobNo;
    private javax.swing.JTextField txtStreet;
    // End of variables declaration//GEN-END:variables
}
