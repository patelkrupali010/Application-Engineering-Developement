/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AddToCart;
import Business.WorkQueue.OrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author krupali
 */
public class ManageOrder extends javax.swing.JPanel {

    /**
     * Creates new form OrderStatusJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private UserAccount account;
    private List<WorkRequest> workRequestList;
    double total = 0.0;

    
    public ManageOrder(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount account ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        populateRequestTable();

    }

    public void populateRequestTable() {
        //Menu itemList = ecosystem.getItemList();
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0);
        workRequestList = ecosystem.getWorkQueue().getWorkRequestListCustomer(account);
        for (WorkRequest request : workRequestList) {
            Object[] row = new Object[tblOrders.getColumnCount()];
            row[0] = request;
            
            tblOrders.getColumnModel().getColumn(0).setMinWidth(0);
            tblOrders.getColumnModel().getColumn(0).setMaxWidth(0);
            
            row[1] = request.getRestaurant().getRestaurantName();
            row[2] = request.getStatus();
            row[3] = request.getRequestDate();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        cartScrollPane = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        lblRestName = new javax.swing.JLabel();
        lblDeliveryManName = new javax.swing.JLabel();
        lblOrderDate = new javax.swing.JLabel();
        lblOrderStatus = new javax.swing.JLabel();
        txtDelivery = new javax.swing.JTextField();
        txtOrderDate = new javax.swing.JTextField();
        txtOrderStatus = new javax.swing.JTextField();
        txtRestName = new javax.swing.JTextField();
        lblCartTotal = new javax.swing.JLabel();
        txtCartTotal = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(153, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER STATUS");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 29, 970, 40));

        tblOrders.setBackground(new java.awt.Color(153, 0, 0));
        tblOrders.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblOrders.setForeground(new java.awt.Color(255, 255, 255));
        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "temp", "Restaurant name", "Status", "Request Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 760, 100));

        jLabel11.setBackground(new java.awt.Color(153, 0, 0));
        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, -1));

        tblCart.setBackground(new java.awt.Color(153, 0, 0));
        tblCart.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblCart.setForeground(new java.awt.Color(255, 255, 255));
        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Item Qty", "Item Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartScrollPane.setViewportView(tblCart);

        add(cartScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 500, 60));

        lblRestName.setBackground(new java.awt.Color(153, 0, 0));
        lblRestName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblRestName.setForeground(new java.awt.Color(255, 255, 255));
        lblRestName.setText("Restaurant Name");
        add(lblRestName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 210, 30));

        lblDeliveryManName.setBackground(new java.awt.Color(153, 0, 0));
        lblDeliveryManName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDeliveryManName.setForeground(new java.awt.Color(255, 255, 255));
        lblDeliveryManName.setText("Delivery Man Name");
        add(lblDeliveryManName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 210, 30));

        lblOrderDate.setBackground(new java.awt.Color(153, 0, 0));
        lblOrderDate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblOrderDate.setForeground(new java.awt.Color(255, 255, 255));
        lblOrderDate.setText("Order Placed On");
        add(lblOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 210, 30));

        lblOrderStatus.setBackground(new java.awt.Color(153, 0, 0));
        lblOrderStatus.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblOrderStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblOrderStatus.setText("Order Status");
        add(lblOrderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, 210, 30));

        txtDelivery.setEditable(false);
        add(txtDelivery, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, 270, 30));

        txtOrderDate.setEditable(false);
        add(txtOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, 270, 30));

        txtOrderStatus.setEditable(false);
        add(txtOrderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 390, 270, 30));

        txtRestName.setEditable(false);
        add(txtRestName, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 270, 30));

        lblCartTotal.setBackground(new java.awt.Color(153, 0, 0));
        lblCartTotal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblCartTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblCartTotal.setText("Cart Total");
        add(lblCartTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 580, 100, 30));

        txtCartTotal.setEditable(false);
        txtCartTotal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        add(txtCartTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 580, 70, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void tblOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrdersMouseClicked
        // TODO add your handling code here:
                try{
                int selectedRow = tblOrders.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) tblCart.getModel();

                if (selectedRow >= 0) {
                    WorkRequest request = (WorkRequest) tblOrders.getValueAt(selectedRow, 0);
                    if (request instanceof OrderWorkRequest) {
                        OrderWorkRequest orderWorkRequest = (OrderWorkRequest) tblOrders.getValueAt(selectedRow, 0);
                        if (orderWorkRequest != null) {
        txtRestName.setText(orderWorkRequest.getRestaurant().getRestaurantName());
        if(orderWorkRequest.getDeliverMan()!= null){
            txtDelivery.setText(orderWorkRequest.getDeliverMan().getName());
        }else
            txtDelivery.setText("Not Assigned yet");
        
        txtOrderDate.setText(orderWorkRequest.getRequestDate().toString());
        txtOrderStatus.setText(orderWorkRequest.getStatus());
        
        model.setRowCount(0);   
        for (AddToCart cartItems : orderWorkRequest.getItemsWithQuatityList()) {
            Object[] row = new Object[tblCart.getColumnCount()];
            row[0] = cartItems;
            row[1] = cartItems.getQuantity();
            row[2] = cartItems.getItem().getPrice() * cartItems.getQuantity();
            total += cartItems.getItem().getPrice() * cartItems.getQuantity();
            model.addRow(row);
        }
         txtCartTotal.setText(total + "");

                           
                        }
                    }

                }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(this, e);
                }
        
    }//GEN-LAST:event_tblOrdersMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane cartScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCartTotal;
    private javax.swing.JLabel lblDeliveryManName;
    private javax.swing.JLabel lblOrderDate;
    private javax.swing.JLabel lblOrderStatus;
    private javax.swing.JLabel lblRestName;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtCartTotal;
    private javax.swing.JTextField txtDelivery;
    private javax.swing.JTextField txtOrderDate;
    private javax.swing.JTextField txtOrderStatus;
    private javax.swing.JTextField txtRestName;
    // End of variables declaration//GEN-END:variables
}
